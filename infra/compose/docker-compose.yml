version: '3.8'

services:
  # PostgreSQL Database server
  postgres:
    image: postgres:17-alpine
    container_name: ubexgo-postgres
    restart: unless-stopped
    env_file:
      - ./.env
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - ../../../postgres_data:/var/lib/postgresql/data
    networks:
      - ubexgo-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # API Service
  api:
    build:
      context: ../../apps/api
      dockerfile: Dockerfile
    container_name: ubexgo-api
    restart: unless-stopped
    ports:
      - "4000:4000"
    env_file:
      - ./.env
    environment:
      NODE_ENV: production
      PORT: ${API_PORT:-4000}
      API_PORT: ${API_PORT:-4000}
      API_PREFIX: ${API_PREFIX:-/api}
      DB_HOST: postgres
      DB_PORT: ${DB_PORT:-5432}
      DB_NAME: ${DB_NAME}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_DIALECT: ${DB_DIALECT:-postgres}
      DB_SSL: ${DB_SSL:-false}
      JWT_SECRET: ${JWT_SECRET}
      JWT_EXPIRES_IN: ${JWT_EXPIRES_IN:-15m}
      JWT_REFRESH_SECRET: ${JWT_REFRESH_SECRET}
      JWT_REFRESH_EXPIRES_IN: ${JWT_REFRESH_EXPIRES_IN:-7d}
      # OTP Configuration
      OTP_CODE_LENGTH: ${OTP_CODE_LENGTH:-6}
      OTP_EXPIRY_MINUTES: ${OTP_EXPIRY_MINUTES:-5}
      OTP_MAX_ATTEMPTS: ${OTP_MAX_ATTEMPTS:-5}
      # Eskiz SMS Configuration
      ESKIZ_EMAIL: ${ESKIZ_EMAIL}
      ESKIZ_PASSWORD: ${ESKIZ_PASSWORD}
      ESKIZ_API_URL: ${ESKIZ_API_URL:-https://notify.eskiz.uz/api}
      # IVR Configuration
      IVR_API_URL: ${IVR_API_URL}
      IVR_API_KEY: ${IVR_API_KEY}
      # Google SSO
      FCM_SERVER_KEY: ${FCM_SERVER_KEY}
      GOOGLE_CLIENT_ID: ${GOOGLE_CLIENT_ID}
      GOOGLE_CLIENT_SECRET: ${GOOGLE_CLIENT_SECRET}
      # Apple SSO
      APPLE_CLIENT_ID: ${APPLE_CLIENT_ID}
      APPLE_TEAM_ID: ${APPLE_TEAM_ID}
      APPLE_KEY_ID: ${APPLE_KEY_ID}
      APPLE_PRIVATE_KEY: ${APPLE_PRIVATE_KEY}
      # CORS
      CORS_ORIGIN: ${CORS_ORIGIN:-*}
      CORS_CREDENTIALS: ${CORS_CREDENTIALS:-true}
      # Other
      MAX_FILE_SIZE: ${MAX_FILE_SIZE:-5242880}
      UPLOAD_PATH: ${UPLOAD_PATH:-./uploads}
      RATE_LIMIT_WINDOW_MS: ${RATE_LIMIT_WINDOW_MS:-900000}
      RATE_LIMIT_MAX: ${RATE_LIMIT_MAX:-100}
      LOG_LEVEL: ${LOG_LEVEL:-error}
      LOG_FILE_PATH: ${LOG_FILE_PATH:-./logs}
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - ubexgo-network
    volumes:
      - ../../apps/api/src:/app/src:cached
      - /app/node_modules

  # Admin Web App
  admin:
    build:
      context: ../../apps/admin
      dockerfile: Dockerfile
    container_name: ubexgo-admin
    restart: unless-stopped
    ports:
      - "3000:80"
    env_file:
      - ./.env
    environment:
      NODE_ENV: production
      VITE_API_URL: ${VITE_API_URL:-http://localhost:4000}
      VITE_API_BASE_URL: ${VITE_API_BASE_URL:-http://localhost:4000/api}
      VITE_APP_NAME: ${VITE_APP_NAME:-UberGo Admin}
      VITE_APP_VERSION: ${VITE_APP_VERSION:-1.0.0}
    depends_on:
      - api
    networks:
      - ubexgo-network

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: ubexgo-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ../nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ../nginx/conf.d:/etc/nginx/conf.d:ro
    depends_on:
      - api
      - admin
    networks:
      - ubexgo-network

networks:
  ubexgo-network:
    driver: bridge

volumes:
  postgres_data:
    driver: local

